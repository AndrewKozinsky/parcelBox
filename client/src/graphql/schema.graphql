union AdminOrSender = AdminOutModel | SenderOutModel

type AdminOutModel {
  email: String!
  id: Int!
  role: USER_ROLE!
}

type CellOutModel {
  cellTypeId: Int!
  depth: Int!
  height: Int!
  id: Int!
  name: String!
  parcelBoxId: Int!
  width: Int!
}

type CellTypeOutModel {
  depth: Int!
  height: Int!
  id: Int!
  name: String!
  parcelBoxTypeId: Int!
  width: Int!
}

input ConfirmEmailInput {
  """User email"""
  code: String!
}

input CreateCellTypeInput {
  """Cell depth"""
  depth: Int!

  """Cell height"""
  height: Int!

  """Cell type name"""
  name: String!

  """Cell depth"""
  parcelBoxTypeId: Int!

  """Cell width"""
  width: Int!
}

input CreateParcelBoxInput {
  """Parcel box address"""
  address: String

  """Business days of the place where parcel box is located"""
  businessDays: [Int!]

  """Working hours from"""
  businessHoursFrom: Int

  """Working hours to"""
  businessHoursTo: Int

  """Parcel box type id"""
  parcelBoxTypeId: Int!
}

input CreateParcelBoxTypeInput {
  """Parcel box type name"""
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteParcelBoxInput {
  """Parcel box id"""
  parcelBoxId: Int!
}

type LocationOutModel {
  address: String!
  businessDays: [Int!]!
  businessHoursFrom: Int!
  businessHoursTo: Int!
  id: Int!
}

input LoginInput {
  """User email"""
  email: String!

  """User password"""
  password: String!
}

type Mutation {
  """
  User login
  	Possible errors:
  	**Почта и пароль не совпадают.** — there is not any user with passed email and password.
  	**Почта зарегистрирована, но не подтверждена.** — user email is not confirmed yet.
  """
  auth_login(input: LoginInput!): AdminOrSender!

  """
  User logout
  	Possible errors:
  	**Токен обновления недействителен.** — refresh token is not valid
  """
  auth_logout: Boolean!

  """Get new access and refresh token"""
  auth_refreshToken: Boolean!

  """
  Register a user as a administrator.
  	Possible errors:
  	**Почта зарегистрирована, но не подтверждена.** — the user is already registered, but doesn't confirm his email.
  	**Почта уже зарегистрирована.** — the user is already registered and confirmed his email.
  """
  auth_registerAdmin(input: RegisterAdminInput!): AdminOutModel!

  """
  Register a user as a administrator.
  	Possible errors:
  	**Почта зарегистрирована, но не подтверждена.** — the user is already registered, but doesn't confirm his email.
  	**Почта уже зарегистрирована.** — the user is already registered and confirmed his email.
  """
  auth_registerSender(input: RegisterSenderInput!): SenderOutModel!

  """
  Send email confirmation email one more time
  	Possible errors:
  	**Почта не найдена.** — passed email is not registered yet.
  	**Почта уже подтверждена.** — email is already confirmed.
  """
  auth_resendConfirmationEmail(input: ResendConfirmationEmailInput!): Boolean!

  """
  Create cell type.
  	Possible errors:
  	**Тип ячейки не создан.** — parcel cell couldn't create for some reason.
  """
  cellType_create(input: CreateCellTypeInput!): CellTypeOutModel!

  """
  Create parcel box type.
  	Possible errors:
  	**Тип посыльного ящика не создан.** — parcel box type couldn't create for some reason.
  """
  parcelBoxType_create(input: CreateParcelBoxTypeInput!): ParcelBoxTypeOutModel!

  """
  Create parcel box.
  	Possible errors:
  	**Тип посыльного ящика не создан.** — parcel box couldn't create for some reason.
  """
  parcelBox_create(input: CreateParcelBoxInput!): ParcelBoxOutModel!

  """Delete parcel box."""
  parcelBox_delete(input: DeleteParcelBoxInput!): Boolean!
}

type ParcelBoxOutModel {
  cells: [CellOutModel!]!
  createdAt: DateTime!
  id: Int!
  location: LocationOutModel!
  parcelBoxTypeId: Int!
  parcelBoxTypeName: String!
}

type ParcelBoxTypeOutModel {
  cellTypes: [CellTypeOutModel!]!
  id: Int!
  name: String!
}

type Query {
  """
  User email confirmation.
  	Possible errors:
  	**Код подтверждения почты не найден.** — email confirmation code is not found in the database.
  	**Срок действия кода подтверждения почты истек.** — email confirmation code is expired.
  """
  auth_confirmEmail(input: ConfirmEmailInput!): Boolean!

  """Get current user data"""
  auth_getMe: AdminOrSender!

  """Get all parcel box of the current user."""
  parcelBox_getMine: [ParcelBoxOutModel!]!
}

input RegisterAdminInput {
  """User email"""
  email: String!

  """User password"""
  password: String!
}

input RegisterSenderInput {
  """User email"""
  email: String!

  """User password"""
  password: String!
}

input ResendConfirmationEmailInput {
  """User email"""
  email: String!
}

type SenderOutModel {
  active: Boolean!
  balance: Int!
  email: String!
  firstName: String
  id: Int!
  lastName: String
  passportNum: String
  role: USER_ROLE!
}

"""User roles in the system"""
enum USER_ROLE {
  admin
  sender
}